name: Prepare Release

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Specify SemVer version level you wish to bump (see: https://github.com/crate-ci/cargo-release/blob/master/docs/reference.md#bump-level)'
        required: true
        type: choice
        options:
          - release
          - patch
          - minor
          - major
          - alpha
          - beta
          - rc

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Rust version from rust-toolchain.toml
        run: rustup show

      - uses: cargo-bins/cargo-binstall@main

      - name: Install dependencies
        run: cargo binstall cargo-release -y

      - name: Set up git config
        run: |
          git config author.email "${{ github.event.sender.id }}+${{ github.event.sender.login }}@users.noreply.github.com"
          git config author.name "${{ github.event.sender.login }}"
          git config committer.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config committer.name "GitHub Actions Bot"
          git config user.email "${{ github.event.sender.id }}+${{ github.event.sender.login }}@users.noreply.github.com"
          git config user.name "${{ github.event.sender.login }}"

      - name: Determine new version number by dry-running `cargo-release`
        run: |
          NEW_VERSION="$(
            cargo release version ${{ inputs.level }} 2>&1 \
              | grep "Upgrading .* from .* to .*" \
              | awk '{print $6}' \
          )"
          echo "New version is $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> "$GITHUB_ENV"

      - name: Switch to the release branch
        run: |
          BRANCH_NAME="release/v${{ env.NEW_VERSION }}"
          git switch -c "$BRANCH_NAME"

      - name: Roll changelog, bump version, and push branch
        run: |
          # see https://opensource.axo.dev/cargo-dist/book/workspaces/cargo-release-guide.html#using-cargo-release-with-pull-requests
          cargo release "${{ inputs.level }}" --execute --no-confirm --config prepare-release.toml

      - name: Open the release PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TITLE="chore(release): prepare release ${{ env.NEW_VERSION }}"

          cat >BODY.md <<EOF
          This PR was automatically generated by this workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          After merging, run the following:

          \`\`\`bash
          git checkout main
          git pull
          cargo dist plan
          cargo release --execute
          \`\`\`
          EOF
          
          gh pr create --base main --title "$TITLE" --body-file BODY.md
